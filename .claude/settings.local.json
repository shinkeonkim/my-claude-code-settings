{
  "permissions": {
    "allow": [
      "WebSearch",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:docs.allauth.org)",
      "WebFetch(domain:dj-rest-auth.readthedocs.io)",
      "WebFetch(domain:docs.astral.sh)",
      "Bash(mkdir:*)",
      "Bash(cd:*)",
      "Bash(cat:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(ls:*)",
      "Bash(pwd:*)",
      "Bash(pkill:*)",
      "Bash(xargs kill:*)",
      "Bash(chmod:*)",
      "Bash(curl:*)",
      "Bash(python:*)",
      "Bash(source:*)",
      "Bash(lsof:*)",
      "Bash(pip install:*)",
      "Bash(alembic init:*)",
      "Bash(alembic revision:*)",
      "Bash(alembic upgrade:*)",
      "Bash(uv init:*)",
      "Bash(uv sync:*)",
      "Bash(uv run:*)",
      "Bash(uv lock:*)",
      "Bash(node:*)",
      "Bash(pkill:*)",
      "Bash(bun create:*)",
      "Bash(npm create:*)",
      "Bash(npx create-vue:*)",
      "Bash(npm install)",
      "Bash(npm install:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm test:*)",
      "Bash(npx tailwindcss init:*)",
      "Bash(npm run dev:*)",
      "Bash(npm run start:*)",
      "Bash(npm run build:*)",
      "Bash(npx create-next-app:*)",
      "Bash(npx tailwindcss:*)",
      "Bash(open http://localhost:3000)",
      "Bash(open http://localhost:8000)",
      "Bash(docker exec:*)",
      "Bash(docker logs:*)",
      "Bash(docker ps:*)",
      "Bash(docker images:*)",
      "Bash(docker build:*)",
      "Bash(docker run:*)",
      "Bash(docker stop:*)",
      "Bash(docker rm:*)",
      "Bash(docker rmi:*)",
      "Bash(docker pull:*)",
      "Bash(docker-compose:*)",
      "Bash(docker-compose exec:*)",
      "Bash(docker-compose down:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker-compose build:*)",
      "Bash(docker-compose logs:*)",
      "Bash(docker-compose restart:*)",
      "Bash(docker system prune:*)",
      "Bash(docker volume prune:*)",
      "Bash(./node_modules/.bin/tailwindcss:*)",
      "Read(//Users/koa/experiments/**)"
    ],
    "deny": [],
    "ask": [
      "Bash(rm -rf:*)"
    ]
  },
  "enabledMcpjsonServers": [
    "playwright-server",
    "fetch",
    "chrome-devtools",
    "browsermcp",
    "DeepGraph Vue MCP",
    "DeepGraph TypeScript MCP",
    "DeepGraph React MCP",
    "context7",
    "memory"
  ],
  "enableAllProjectMcpServers": true
}